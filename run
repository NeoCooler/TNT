#!/bin/bash
clear

echo -e $MAGENTA"    <= !!! Welcome to TNT we are testing your system to check the compatibility !!! =>"
echo -e $BLUE"#$NORMAL"

echo -e $BLUE"# Debug Return:"
echo -e $BLUE"#$NORMAL"

#Fixe Permission
chmod 775 scripts/*
echo -e $GREEN"-> Permissions Verified"$NORMAL

#System Functions
source scripts/functions_system
echo -e $GREEN"-> Add All System Functions Verified"$NORMAL

#Color injection
source scripts/colors
echo -e $GREEN"-> Add Colorisation for Terminal Verified"$NORMAL

#Ajust Terminal Dimension
echo -ne '\e[8;13;93t'
echo -e $GREEN"-> Terminal Dimension Verified"$NORMAL

#Icone injection
source scripts/icones
echo -e $GREEN"-> Add some links to icone from system Verified"$NORMAL

#System info
source info_system
echo -e $GREEN"-> Add some links to icone from system Verified"$NORMAL

#Fonctions with update
source scripts/functions_with_update
echo -e $GREEN"-> Add All Functions With Update Verified"$NORMAL

#Function with reboot
source scripts/functions_with_reboot
echo -e $GREEN"-> Add All Functions With Reboot Verified"$NORMAL

#Fonctions
source scripts/functions
echo -e $GREEN"-> Add All others Functions Verified"$NORMAL

#Check root
source scripts/check_root

#Check Distro
source scripts/check_distro

#Check Architecture
source scripts/check_archi

#Check programm open
source scripts/check_open

#Check Internet connection
source scripts/check_connection

#Check needed Package
source scripts/check_package

#Check for update
source scripts/check_update

#Title TNT
source scripts/title

#Copyright
source scripts/copyright

#Update before continue
zenity --question --text="Updates your packages,\nMay be required before continuing...\n\nDo you wish to update?"
if [ $? == 0 ]
then
	(
	echo "# Update All Packages..." ;
	sudo apt-get -qq update
	) |
	progressbar
	echo -e  $GREEN"-> Latest Package Version Verified"$NORMAL
fi

#Main menu
while :
do
ans=$(zenity  --list \
	--width=770 \
	--height=670 \
	--title "TNT $VERSION MAIN MENU" \
	--text "Choose a options:" \
	--cancel-label "Exit" \
	--column "Actions" --column "Informations" \
	"Install" "Add Mod/applications." \
	"Remove" "Remove Mod/applications." \
	"Android" "Add Tools for Android." \
	"Clean" "Clean/Remove all old package/kernels." \
	"Update" "Update all package or distribution." \
	"Admin" "Use and execute spÃ©cial command administration." \
	--separator=":"
)
if [ $? == 1 ]
then
	quit	
fi
menu=$(echo $ans | tr "\:" "\n")
for x in $menu
do
	if [ $x = "Install" ]
	then
		ans=$(zenity  --list \
			--width=770 \
			--height=670 \
			--title "TNT $VERSION - Install - Add Mod/applications." \
			--text "Select what you need:" \
			--cancel-label "Back" \
			--ok-label "Install Selected" \
			--checklist \
			--column "Select" --column "App. Name" --column "Informations" --column "Update?" --column "Reboot?" \
			FALSE "LBreakout" "A clone of the classic game Breakout." "NO" "NO" \
			FALSE "OpenArena" "Games Like Quake 3." "NO" "NO" \
			FALSE "Cheese" "WebCam Application." "NO" "NO" \
			FALSE "Gimp" "GNU Image Manipulation Program." "YES" "NO" \
			FALSE "Google-Chrome" "A fast and free Web browser." "YES" "NO" \
			FALSE "Nvidia" "Official owner of nvidia driver." "NO" "YES" \
			FALSE "Google-Music-Manager" "Official Google Musique Uploader." "YES" "NO" \
			--separator=":"
		)
		if [ $? == 1 ]
		then
			echo
		fi
		arr=$(echo $ans | tr "\:" "\n")

		if [ $? == 0 ]
		then
			echo -e $BLUE"#"
			echo -e $BLUE"#$RED Installer Info:"
			echo -e $BLUE"#$NORMAL"
		fi


		for x in $arr
		do
			if [ $x = "Gimp" ]
			then
				GimpPrep
			fi
			if [ $x = "Google-Chrome" ]
			then
				GoogleChromePrep
			fi
		done

		if [ $UPDATEREQUIRED == YES ]
		then
			(
			echo "# Update All Packages..." ;
			sudo apt-get -qq update
			) |
			progressbar
			echo -e  $GREEN"-> Latest Package Version Verified"$NORMAL
		fi

		for x in $arr
		do
			if [ $x = "LBreakout" ]
			then
				LBreakout
			fi
			if [ $x = "OpenArena" ]
			then
				OpenArena
			fi
			if [ $x = "Cheese" ]
			then
				Cheese
			fi
			if [ $x = "Gimp" ]
			then
				Gimp
			fi
			if [ $x = "Google-Chrome" ]
			then
				GoogleChrome
			fi
			if [ $x = "Nvidia" ]
			then
				Nvidia
			fi
			if [ $x = "Google-Music-Manager" ]
			then
				GoogleMusicManager
			fi
		done
	fi

	if [ $x = "Remove" ]
	then
		ans=$(zenity  --list \
			--width=770 \
			--height=670 \
			--title "TNT $VERSION - Remove - Remove Mod/applications." \
			--text "Select what you want to remove:" \
			--cancel-label "Back" \
			--ok-label "Remove Selected" \
			--checklist \
			--column "Select" --column "App. Name" --column "Informations" --column "Update?" --column "Reboot?" \
			FALSE "LBreakout" "A clone of the classic game Breakout." "NO" "NO" \
			FALSE "OpenArena" "Games Like Quake 3." "NO" "NO" \
			FALSE "Cheese" "WebCam Application." "NO" "NO" \
			FALSE "Gimp" "GNU Image Manipulation Program." "YES" "NO" \
			FALSE "Google-Chrome" "A fast and free Web browser." "YES" "NO" \
			FALSE "Nvidia" "Official owner of nvidia driver." "NO" "YES" \
			FALSE "Google-Music-Manager" "Official Google Musique Uploader." "YES" "NO" \
			--separator=":"
		)
		if [ $? == 1 ]
		then
			echo
		fi
		arr=$(echo $ans | tr "\:" "\n")

		if [ $? == 0 ]
		then
			echo -e $BLUE"#"
			echo -e $BLUE"#$RED Remove Info:"
			echo -e $BLUE"#$NORMAL"
		fi


		for x in $arr
		do
			if [ $x = "Gimp" ]
			then
				GimpPrep
			fi
			if [ $x = "Google-Chrome" ]
			then
				GoogleChromePrep
			fi
		done

		if [ $UPDATEREQUIRED == YES ]
		then
			(
			echo "# Update All Packages..." ;
			sudo apt-get -qq update
			) |
			progressbar
			echo -e  $GREEN"-> Latest Package Version Verified"$NORMAL
		fi

		for x in $arr
		do
			if [ $x = "LBreakout" ]
			then
				RMLBreakout
			fi
			if [ $x = "OpenArena" ]
			then
				RMOpenArena
			fi
			if [ $x = "Cheese" ]
			then
				RMCheese
			fi
			if [ $x = "Gimp" ]
			then
				RMGimp
			fi
			if [ $x = "Google-Chrome" ]
			then
				RMGoogleChrome
			fi
			if [ $x = "Nvidia" ]
			then
				RMNvidia
			fi
			if [ $x = "Google-Music-Manager" ]
			then
				RMGoogleMusicManager
			fi
		done
	fi


	if [ $x = "Android" ]
	then
		notify-send -i $ICO_INFO "INFO" "Coming soon"
	fi

	if [ $x = "Clean" ]
	then
		ans=$(zenity  --list \
			--width=770 \
			--height=670 \
			--title "TNT $VERSION - Clean - Clean/Remove all old package/kernels." \
			--text "Select what you need:" \
			--cancel-label "Back" \
			--ok-label "Clean Selected" \
			--checklist \
			--column "Select" --column "App. Name" --column "Informations" --column "Update?" --column "Reboot?" \
			FALSE "Oldpack" "Delete all old packages." "NO" "NO" \
			FALSE "Cachepack" "Delete all packages in the cache." "NO" "NO" \
			--separator=":"
		)
		if [ $? == 1 ]
		then
			echo
		fi
		arr=$(echo $ans | tr "\:" "\n")

		if [ $? == 0 ]
		then
			echo -e $BLUE"#"
			echo -e $BLUE"#$RED Cleanner Info:"
			echo -e $BLUE"#$NORMAL"
		fi


		for x in $arr
		do
			if [ $x = "xxxxx" ]
			then
				xxxxx
			fi
		done

		if [ $UPDATEREQUIRED == YES ]
		then
			(
			echo "# Update All Packages..." ;
			sudo apt-get -qq update
			) |
			progressbar
			echo -e  $GREEN"-> Latest Package Version Verified"$NORMAL
		fi

		for x in $arr
		do
			if [ $x = "Oldpack" ]
			then
				Oldpack
			fi
			if [ $x = "Cachepack" ]
			then
				Cachepack
			fi
		done
	fi

	if [ $x = "Update" ]
	then
		notify-send -i $ICO_INFO "INFO" "Coming soon"
	fi

	if [ $x = "Admin" ]
	then
		notify-send -i $ICO_INFO "INFO" "Coming soon"
	fi
done
done
